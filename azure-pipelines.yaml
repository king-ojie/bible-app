trigger:
  branches:
    include:
    - main
resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/main

variables:
  dockerRegistryServiceConnection: 'Docker'
  dockerRegistry: 'victorebhojie'
  imageName: 'bible-llm-app'
  kubernetesNamespace: 'default'
  aksConnection: 'AKS'

stages:
  - stage: Build
    displayName: Build and Push Docker Image
    jobs:
      - job: Build
        pool:
          vmImage: 'ubuntu-latest'
        steps:

          - checkout: self
            clean: true
            fetchTags: false
          - task: Docker@2
            displayName: 'Login to Docker Registry'
            inputs:
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: $(dockerRegistry)/$(imageName)
              command: login

          - task: Docker@2
            displayName: 'Build and push Docker image'
            inputs:
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: $(dockerRegistry)/$(imageName)
              command: buildAndPush
              Dockerfile: '**/Dockerfile'
              tags: |
                $(Build.BuildId)
                latest

          - task: CopyFiles@2
            displayName: 'Copy Files to Artifact Staging Directory'
            inputs:
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'

  - stage: Deploy
    displayName: Deploy to AKS
    dependsOn: Build
    jobs:
      - deployment: DeployToAKS
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop
                  displayName: 'Download artifact'

                - task: KubernetesManifest@1
                  displayName: 'Deploy Kubernetes Manifests'
                  inputs:
                    action: deploy
                    kubernetesServiceConnection: $(aksConnection)
                    namespace: $(kubernetesNamespace)
                    manifests: '$(System.DefaultWorkingDirectory)/_Bible App-CI/drop/k8s/deployment.yaml'
                    containers: |
                      $(dockerRegistry)/$(imageName):$(Build.BuildId)